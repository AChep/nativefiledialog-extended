name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-ubuntu16-gcc:

    runs-on: ubuntu-16.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Installing Dependencies
      run: sudo apt-get update && sudo apt-get install libgtk-3-dev
    - name: Configure
      run: mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror -pedantic" -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build build --target install
  
  build-ubuntu18-gcc:

    runs-on: ubuntu-18.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Installing Dependencies
      run: sudo apt-get update && sudo apt-get install libgtk-3-dev
    - name: Configure
      run: mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror -pedantic" -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build build --target install
  
  build-ubuntu20-gcc:

    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Installing Dependencies
      run: sudo apt-get update && sudo apt-get install libgtk-3-dev
    - name: Configure
      run: mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror -pedantic" -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build build --target install
  
  build-ubuntu-clang:

    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Installing Dependencies
      run: sudo apt-get update && sudo apt-get install libgtk-3-dev
    - name: Configure
      run: mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror -pedantic" -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build build --target install
  
  build-macos-clang:

    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Configure
      run: mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror -pedantic" -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build build --target install
  
  build-windows-msvc:

    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Configure
      run: mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build build --target install
  
  build-windows-mingw:

    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up MinGW-w64
      uses: msys2/setup-msys2@v2
      with:
        path-type: minimal
        install: >-
          base-devel
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-cmake
    - name: Configure
      run: mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ -G 'MSYS Makefiles' -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror -pedantic" -DNFD_BUILD_TESTS=ON ..
    - name: Build
      run: cmake --build build --target install
